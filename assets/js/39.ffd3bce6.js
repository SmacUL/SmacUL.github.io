(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{252:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"packet-sniffing-and-spoofing-lab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#packet-sniffing-and-spoofing-lab"}},[t._v("#")]),t._v(" Packet Sniffing and Spoofing Lab")]),t._v(" "),a("h2",{attrs:{id:"pre-experiment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pre-experiment"}},[t._v("#")]),t._v(" Pre-Experiment")]),t._v(" "),a("p",[t._v("实验有两个目的: 掌握包嗅探与伪装的工具的使用; 通过编写一些简单的包嗅探与伪装程序, 理解这些程序的工作原理.")]),t._v(" "),a("p",[t._v("整个实验用到了两台虚拟机:")]),t._v(" "),a("ul",[a("li",[t._v("10.0.2.26 (负责程序运行)")]),t._v(" "),a("li",[t._v("10.0.2.27 (辅助)")])]),t._v(" "),a("h2",{attrs:{id:"t1-using-tools-to-sniff-and-spoof-packets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t1-using-tools-to-sniff-and-spoof-packets"}},[t._v("#")]),t._v(" T1 Using Tools to Sniff and Spoof Packets")]),t._v(" "),a("p",[t._v("mycode.py")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bin/python")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" scapy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("code",[t._v("python mycode.py")]),t._v(" 可以查看内容 .")]),t._v(" "),a("p",[a("img",{attrs:{src:"/note/img/2020-03-12-09-55-21.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"t1-1-sniffing-packets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t1-1-sniffing-packets"}},[t._v("#")]),t._v(" T1.1 Sniffing Packets")]),t._v(" "),a("p",[t._v("学习使用 Scapy 完成包嗅探.")]),t._v(" "),a("p",[t._v("sniffer.py")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" scapy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_pkt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    pkt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\npkt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sniff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'icmp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("print_pkt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),t._v(" "),a("h4",{attrs:{id:"t1-1a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t1-1a"}},[t._v("#")]),t._v(" T1.1A")]),t._v(" "),a("p",[t._v("分别在 root 与非 root 环境下调用 sniffer.py.")]),t._v(" "),a("p",[t._v("在 root 条件下, 自己或者另一台设备使用 "),a("code",[t._v("ping")]),t._v(" 命令, 运行 sniffer.py 的机子将循环打出 ICMP 包的相关信息:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/note/img/2020-03-12-10-02-58.png",alt:""}})]),t._v(" "),a("p",[t._v("如果不使用 root, 会直接报错 "),a("code",[t._v("socket.error: [Errno 1] Operation not permitted")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"t1-1b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t1-1b"}},[t._v("#")]),t._v(" T1.1B")]),t._v(" "),a("p",[t._v("Scapy Filter 默认情况下使用 BPF 作为自己的句法, 我们需要完成下面的几件事:")]),t._v(" "),a("ul",[a("li",[t._v("捕捉 ICMP 包")]),t._v(" "),a("li",[t._v("带着终点端口 23 的特定 IP 发出的 TCP 包.")]),t._v(" "),a("li",[t._v("捕捉发去或来自于特定子网的数据包. 可以选择任意子网, 但是不要选择那些 VM 可以接触到的. 例如 128.230.0.0/16")])]),t._v(" "),a("p",[t._v("重点在 sniffer.py 文件中, "),a("code",[t._v("pkt = sniff(filter='icmp', prn=print_pkt)")]),t._v(", 一句内设置 filter.")]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# T1.1A 使用的是 icmp 的 filter. ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ping www.baidu.com 即可")]),t._v("\npkt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sniff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'icmp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("print_pkt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 嗅探终点 port:23 的 IP:10.0.2.27 发出的 TCP 包. ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IP 为 10.0.2.27 的设备可以 telnet www.baidu.com")]),t._v("\npkt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sniff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tcp and port 23 and host 10.0.2.27'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("print_pkt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 嗅探一个 VM 无法触及的子网 128.230.0.0/16")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将会提示: tcpdump: Mask syntax for networks only")]),t._v("\npkt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sniff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'host 128.230.0.0/16'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("print_pkt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"t1-2-spoofing-icmp-packets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t1-2-spoofing-icmp-packets"}},[t._v("#")]),t._v(" T1.2 Spoofing ICMP Packets")]),t._v(" "),a("p",[t._v("伪装 ICMP 数据包, 利用 Spacy 发送给同一子网下的另一台 VM. 使用 Wireshark 去观察,")]),t._v(" "),a("p",[t._v("spoofer.py")]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" scapy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10.0.2.27'")]),t._v(" \nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ICMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \np "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" b \nsend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("这段代码将组装并向 "),a("code",[t._v("10.0.2.27")]),t._v(" 发送一个 ICMP 数据包. 这里 6 行的位置, "),a("code",[t._v("/")]),t._v(" 不再表示除号, 它已经被 IP 类重新加载, 现在表示 stack 的含义. 运行此代码仍然需要 sudo 权限.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/note/img/2020-03-12-10-38-58.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"t1-3-traceroute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t1-3-traceroute"}},[t._v("#")]),t._v(" T1.3 Traceroute")]),t._v(" "),a("p",[t._v("这一部分的实验将使用 Scapy 去计算出发点与目标点之间的距离, 这个距离使用路由的结点数量来表示.")]),t._v(" "),a("p",[t._v("我们可以使用 Python 去写一个循环, 不断地向目标点发送 ICMP 数据包. 一开始设置 TTL (Time-To-Live) 为 1, 那么发出的 ICMP 数据包在经历一个路由结点后, 就会失活被抛弃, 但是, 我们能够以此获取路由结点的 IP, 虽然我并不知道路由结点的 IP 获取之后有什么用.")]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" scapy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ICMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'180.101.49.11'")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ttl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" b \n    send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("从 wireshark 中, 可以看出, 在最终到达  "),a("code",[t._v("180.101.49.11")]),t._v(" 这个目的地之前经过了:")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),t._v(".2.1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("68.213")]),t._v(".96.62\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),t._v(" "),a("h3",{attrs:{id:"t1-4-sniffing-and-then-spoofing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t1-4-sniffing-and-then-spoofing"}},[t._v("#")]),t._v(" T1.4 Sniffing and-then Spoofing")]),t._v(" "),a("p",[t._v("结合嗅探和伪造, 需要两台 VM, A 和 B. 让 B ping 一个 IP, 这个 IP 是否真实存在并不重要. 然后在 A 中运行嗅探程序, 监控 LAN 中的通信状态. 理论上, 只要 B 发出了 ICMP 包, A 就会感知, 并且发出伪造的响应.")]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" scapy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spoof_pkt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ICMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10.0.2.27'")]),t._v("\n    send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\npkt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sniff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'icmp and host 10.0.2.27'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spoof_pkt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("IP 为 "),a("code",[t._v("10.0.2.27")]),t._v(" 的 VM 将尝试 ping 一个 IP, 例如 "),a("code",[t._v("www.baidu.com")]),t._v(".")]),t._v(" "),a("p",[t._v("IP 为 "),a("code",[t._v("10.0.2.26")]),t._v(" 的 VM 将监听 LAN 中的通信, 嗅探到 "),a("code",[t._v("10.0.2.27")]),t._v(" 的 ICMP 请求包的时候, 就会自动发送一个 ICMP 响应包.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/note/img/2020-03-12-11-27-48.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"t2-writing-programs-to-sniff-and-spoof-packets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-writing-programs-to-sniff-and-spoof-packets"}},[t._v("#")]),t._v(" T2 Writing Programs to Sniff and Spoof Packets")]),t._v(" "),a("h3",{attrs:{id:"t2-1-writing-packet-sniffing-program"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-1-writing-packet-sniffing-program"}},[t._v("#")]),t._v(" T2.1 Writing Packet Sniffing Program")]),t._v(" "),a("p",[t._v("这里将使用 pcap.")]),t._v(" "),a("h4",{attrs:{id:"t2-1a-understanding-how-a-sniffer-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-1a-understanding-how-a-sniffer-works"}},[t._v("#")]),t._v(" T2.1A Understanding How a Sniffer Works")]),t._v(" "),a("p",[t._v("理解一个 Sniffer 是如何工作的. 利用编写好的程序去指出源头和目标的 IP 地址.")]),t._v(" "),a("p",[t._v("完成下述的几个问题:")]),t._v(" "),a("ol",[a("li",[t._v("用自己的话去总结描述上面的代码.")]),t._v(" "),a("li",[t._v("为什么这个 sniffer 程序需要 root 权限; 在没有 root 权限的情况下, 程序会死在哪里.")]),t._v(" "),a("li",[t._v("打开或关闭自己程序的混淆模式. 请描述两种模式下的不同.")])]),t._v(" "),a("h4",{attrs:{id:"t2-1b-writing-filters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-1b-writing-filters"}},[t._v("#")]),t._v(" T2.1B Writing Filters")]),t._v(" "),a("p",[t._v("更换程序中的 filter, 完成下述的任务:")]),t._v(" "),a("ol",[a("li",[t._v("捕捉两个 host 之间的 ICMP 包")]),t._v(" "),a("li",[t._v("目标端口为 10 ~ 100 之间的所有 TCP 包.")])]),t._v(" "),a("h4",{attrs:{id:"t2-1c-sniffing-passwords"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-1c-sniffing-passwords"}},[t._v("#")]),t._v(" T2.1C Sniffing Passwords")]),t._v(" "),a("p",[t._v("当别人使用 telnet 时, 请展示如何使用自己的嗅探程序去获取密码? 啥密码?")]),t._v(" "),a("p",[t._v("TCP 部分的数据, telnet 使用 TCP.")]),t._v(" "),a("p",[t._v("可以指出整段数据部分, 然后标记密码位置.")]),t._v(" "),a("h3",{attrs:{id:"t2-2-spoofing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-2-spoofing"}},[t._v("#")]),t._v(" T2.2 Spoofing")]),t._v(" "),a("p",[t._v("raw socket 是什么? 正常来说, 操作系统并不允许用户随意修改一个数据包的任意位置, 大部分的位置都被系统填充, 除非有管理员权限.")]),t._v(" "),a("p",[t._v("这玩意很简单, 包括四步:")]),t._v(" "),a("ol",[a("li",[t._v("create a raw socket")]),t._v(" "),a("li",[t._v("set socket option")]),t._v(" "),a("li",[t._v("construct the packet")]),t._v(" "),a("li",[t._v("send out the packet through the raw socket")])]),t._v(" "),a("p",[t._v("有一段简单的程序示例.")]),t._v(" "),a("h4",{attrs:{id:"t2-2a-write-a-spoofing-program"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-2a-write-a-spoofing-program"}},[t._v("#")]),t._v(" T2.2A Write a spoofing program")]),t._v(" "),a("p",[t._v("利用 C 编写自己的包嗅探程序, 提供证据证明这个程序发了包")]),t._v(" "),a("h4",{attrs:{id:"t2-2b-spoof-an-icmp-echo-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-2b-spoof-an-icmp-echo-request"}},[t._v("#")]),t._v(" T2.2B Spoof an ICMP Echo Request")]),t._v(" "),a("p",[t._v("代表其他的机子伪装 ICMP echo Request 数据包, 这个数据包应该被送到一个远程主机, 然后打开 Wireshark 康康远程主机返回了什么.")]),t._v(" "),a("p",[t._v("完成以下的问题:")]),t._v(" "),a("ul",[a("li",[t._v("是否能够随意修改 IP 包的长度, 不用管 IP 包的实际长度.")]),t._v(" "),a("li",[t._v("使用 raw socket 编程, 是否必须去计算 IP 头部的 checksum")]),t._v(" "),a("li",[t._v("为什么需要 root 权限, 如果没有 root 权限, 康康程序死在了哪.")])]),t._v(" "),a("h3",{attrs:{id:"t2-3-sniff-and-then-spoof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t2-3-sniff-and-then-spoof"}},[t._v("#")]),t._v(" T2.3 Sniff and then Spoof")])])}),[],!1,null,null,null);s.default=r.exports}}]);